package TestPartyModel.design;

import java.util.List;
import java.util.Random;

import org.eclipse.emf.ecore.EObject;

import party.Drink;
import party.Participant;
import party.Sustenance;

/**
 * The services class used by VSM.
 */
public class Services {
    
    /**
    * See http://help.eclipse.org/neon/index.jsp?topic=%2Forg.eclipse.sirius.doc%2Fdoc%2Findex.html&cp=24 for documentation on how to write service methods.
    */
    public EObject myService(EObject self, String arg) {
       // TODO Auto-generated code
      return self;
    }
    
    // ----- Methods for Drink class -----
    public Double generateRandomDrinkPrice(Drink drink) {
    	int minValue = 8, maxValue=40;
        Random theRandom = new Random();
        double theRandomValue = 0.0;
        if( Double.valueOf(maxValue - minValue).isInfinite() == false ) 
            theRandomValue = minValue + (maxValue - minValue) * theRandom.nextDouble();
        return theRandomValue;
    }
    
    // ----- methods for Participant class -----
    public Double calculateTotalValueOfConsumption(Participant participant) {
    	List<Sustenance> consumedSustenance = participant.getConsumes();
    	double totalValueOfConsumption = 0;
    	if (consumedSustenance == null || consumedSustenance.size() == 0) {
    		return totalValueOfConsumption;
    	}
    	for (Sustenance s : consumedSustenance) {
    		totalValueOfConsumption += s.getPrice();
    	}
    	return totalValueOfConsumption;
    }
}
